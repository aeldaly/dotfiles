# reboot / halt / poweroff
function reboot() {
    sudo /sbin/reboot -r now
}

function poweroff() {
    sudo /sbin/poweroff -r now
}

function halt() {
    sudo /sbin/halt -r now
}

function shutdown() {
    sudo /sbin/shutdown -r now
}

# start simple server
function serve() {
    python -m SimpleHTTPServer $@
}

function phpserve() {
    php -S localhost:8000
}

# npm aliases
function npmo() {
    npm outdated --depth=0 $@
}

function npmnewest() {
    npm outdated --depth=0 --parseable | cut -d: -f4
}

function gitwap() {
    git log -i --grep=wap --no-merges --color --decorate --pretty=format: * %s
}

function opensocks() {
    networksetup -setsocksfirewallproxy "WI-FI" localhost 8080
}

function closesocks() {
    networksetup -setsocksfirewallproxystate "WI-FI" off
}

function listenports() {
    lsof -i | grep LISTEN
}

# alias -g sublhe='subliminal download -l he'

function ..() {
    cd ..
}

function k() {
    kubectl $@
}

function dc() {
    docker-compose $@
}

function jirao() {
    id=$(echo $1 | sed 's/WAP-//gi')
    open "https://blazemeter.atlassian.net/browse/WAP-$id"
}

function devs() {
    npm run dev-server -- --cert=$HOME/.localhost-ssl/private.crt --key=$HOME/.localhost-ssl/private.key
}

function ec2s() {
    aws ec2 describe-instances --filter 'Name=tag:Name,Values=$1*' --region us-east-1
}

function bzdev() {
    local location="$HOME/repos/bzdev"
    if [ "$VIRTUAL_ENV" != "$location/.venv" ]; then
        local activate="$location/.venv/bin/activate"
        echo "Sourcing $activate"
        source $activate
    fi
    $(which python2) "$location/bzdev.py" $@
}
